group 'br.com.felipe'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        springBootVersion = '1.4.0.RELEASE'
    }
    repositories {
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://repo.spring.io/milestone" }
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'spring-boot'

dependencies {
    compile project(":config")
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

jar {
    baseName = 'JsonDiffer'
    version = '1.0-SNAPSHOT'
    manifest {
        attributes 'Main-Class': 'br.com.felipe.Application'
    }
}


/**
 * Run the main application
 */
bootRun {
    main = 'br.com.felipe.Application'
}

/**
 * Confs to all projects
 */
allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'spring-boot'
    apply plugin: 'jacoco'
    apply plugin: 'findbugs'

    sourceCompatibility = 1.8
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "http://repo1.maven.org/maven2/" }
    }
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-data-rest')
        // https://mvnrepository.com/artifact/org.codehaus.sonar/sonar-plugin-api
        compile group: 'org.codehaus.sonar', name: 'sonar-plugin-api', version: '5.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath)
            .include("**/build/jacoco/*.exec")
            .exclude("**/Application.java")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "${buildDir}/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}
